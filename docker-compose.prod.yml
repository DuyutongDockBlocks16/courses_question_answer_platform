version: "3.9"

volumes:
  astro_node_modules:
  database_data:
  redis_data:

services:
  nginx:
    image: nginx:stable-alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - qa-api
      - qa-ui
    ports:
      - 7800:7800 # 生产环境通常监听 80 或 443
    restart: always

  qa-api:
    build:
      context: qa-api
    image: prod-qa-api:latest
    restart: always
    volumes:
      - ./app-cache/:/app-cache
    expose:
      - 7777
    depends_on:
      - database
      - flyway
      - redis-cache
    env_file:
      - project.prod.env

  qa-ui:
    build:
      context: qa-ui
    image: prod-qa-ui:latest
    restart: always
    volumes:
      - astro_node_modules:/app/node_modules
    expose:
      - 3000
    depends_on:
      - qa-api

  llm-api:
    build:
      context: llm-api
    image: llm-api
    restart: always
    expose:
      - 7000

  database:
    container_name: database-server-dab-p2-ffeb713a-b7eb-49df-a5ae-4877ceec8fdc
    image: postgres:14.1
    restart: always
    volumes:
      - database_data:/var/lib/postgresql/data
    env_file:
      - project.prod.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U username"]
      interval: 30s
      timeout: 10s
      retries: 5

  flyway:
    image: flyway/flyway:9.11.0-alpine
    depends_on:
      - database
    volumes:
      - ./flyway/sql/:/flyway/sql
    command: -connectRetries=60 -baselineOnMigrate=true migrate
    env_file:
      - project.prod.env

  redis-cache:
    image: redis:alpine
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - redis_data:/data
      - ./redis/prod-redis.conf:/usr/local/etc/redis/redis.conf
    expose:
      - 6379
    restart: always

  e2e-playwright:
    entrypoint: "/bin/true"
    build:
      context: e2e-playwright
    image: prod-e2e-playwright:latest
    depends_on:
      - nginx
    volumes:
      - ./e2e-playwright/tests:/e2e-playwright/tests
    restart: on-failure
    network_mode: bridge # 生产环境建议隔离网络
